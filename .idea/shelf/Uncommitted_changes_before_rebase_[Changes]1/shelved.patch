Index: src/main/java/proyecto/dh/config/security/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto.dh.config.security;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\r\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\r\nimport org.springframework.security.config.http.SessionCreationPolicy;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.security.oauth2.jwt.JwtDecoder;\r\nimport org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\r\nimport org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\r\nimport org.springframework.security.web.SecurityFilterChain;\r\nimport proyecto.dh.config.security.CustomJwtDecoder;\r\nimport proyecto.dh.exceptions.handler.RestAccessDeniedHandler;\r\nimport proyecto.dh.exceptions.handler.RestAuthenticationEntryPoint;\r\n\r\nimport javax.crypto.KeyGenerator;\r\nimport javax.crypto.SecretKey;\r\n\r\n@Configuration\r\n@EnableWebSecurity\r\n@AllArgsConstructor\r\n@EnableMethodSecurity\r\npublic class SecurityConfig {\r\n\r\n    private final RestAuthenticationEntryPoint authenticationEntryPoint;\r\n    private final RestAccessDeniedHandler accessDeniedHandler;\r\n\r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http, JwtDecoder jwtDecoder) throws Exception {\r\n        http\r\n                .csrf(AbstractHttpConfigurer::disable)\r\n                .authorizeHttpRequests(auth -> auth\r\n                        .requestMatchers(\"/auth/**\").permitAll()\r\n                        .anyRequest().permitAll()\r\n                )\r\n                .sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\r\n                .oauth2ResourceServer(oauth2 -> oauth2\r\n                        .jwt(jwt -> jwt\r\n                                .decoder(jwtDecoder)\r\n                                .jwtAuthenticationConverter(jwtAuthenticationConverter())\r\n                        )\r\n                )\r\n                .exceptionHandling(exceptions -> {\r\n                    exceptions.authenticationEntryPoint(authenticationEntryPoint);\r\n                    exceptions.accessDeniedHandler(accessDeniedHandler);\r\n                });\r\n\r\n        return http.build();\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n\r\n    @Bean\r\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) throws Exception {\r\n        return authenticationConfiguration.getAuthenticationManager();\r\n    }\r\n\r\n    @Bean\r\n    public JwtAuthenticationConverter jwtAuthenticationConverter() {\r\n        JwtGrantedAuthoritiesConverter grantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\r\n\r\n        grantedAuthoritiesConverter.setAuthorityPrefix(\"ROLE_\");\r\n        grantedAuthoritiesConverter.setAuthoritiesClaimName(\"scope\");  // Leer roles desde \"scope\"\r\n\r\n        JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\r\n        jwtAuthenticationConverter.setJwtGrantedAuthoritiesConverter(grantedAuthoritiesConverter);\r\n        return jwtAuthenticationConverter;\r\n    }\r\n\r\n    @Bean\r\n    public JwtDecoder jwtDecoder(SecretKey secretKey) {\r\n        return new CustomJwtDecoder(secretKey);\r\n    }\r\n\r\n    @Bean\r\n    public SecretKey secretKey() {\r\n        try {\r\n            KeyGenerator keyGen = KeyGenerator.getInstance(\"HmacSHA256\");\r\n            keyGen.init(256);\r\n            return keyGen.generateKey();\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(\"Error generating secret key\", e);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/proyecto/dh/config/security/SecurityConfig.java b/src/main/java/proyecto/dh/config/security/SecurityConfig.java
--- a/src/main/java/proyecto/dh/config/security/SecurityConfig.java	(revision 49b61682a1cc7a5a8e6e0aed4aaeef30e9bbf019)
+++ b/src/main/java/proyecto/dh/config/security/SecurityConfig.java	(date 1717026492332)
@@ -16,7 +16,6 @@
 import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;
 import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;
 import org.springframework.security.web.SecurityFilterChain;
-import proyecto.dh.config.security.CustomJwtDecoder;
 import proyecto.dh.exceptions.handler.RestAccessDeniedHandler;
 import proyecto.dh.exceptions.handler.RestAuthenticationEntryPoint;
 
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.2.5</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>proyecto</groupId>\r\n\t<artifactId>dh</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>Proyecto Integrador - Digital House</name>\r\n\t<description>Spring Boot Backend</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r\n\t\t\t<version>2.5.0</version>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-ui</artifactId>\r\n\t\t\t<version>1.8.0</version>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-common -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springdoc</groupId>\r\n\t\t\t<artifactId>springdoc-openapi-common</artifactId>\r\n\t\t\t<version>1.8.0</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.modelmapper</groupId>\r\n\t\t\t<artifactId>modelmapper</artifactId>\r\n\t\t\t<version>3.1.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security</groupId>\r\n\t\t\t<artifactId>spring-security-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.amazonaws</groupId>\r\n\t\t\t<artifactId>aws-java-sdk-s3</artifactId>\r\n\t\t\t<version>1.12.725</version>\r\n\t\t</dependency>\r\n\t\t<!-- Dependencia para JAXB API -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.xml.bind</groupId>\r\n\t\t\t<artifactId>jaxb-api</artifactId>\r\n\t\t\t<version>2.3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.sun.xml.bind</groupId>\r\n\t\t\t<artifactId>jaxb-core</artifactId>\r\n\t\t\t<version>2.3.0.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.sun.xml.bind</groupId>\r\n\t\t\t<artifactId>jaxb-impl</artifactId>\r\n\t\t\t<version>2.3.3</version>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\r\n\t\t\t<artifactId>jackson-core</artifactId>\r\n\t\t\t<version>2.17.1</version>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\r\n\t\t\t<artifactId>jackson-annotations</artifactId>\r\n\t\t\t<version>2.17.1</version>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\r\n\t\t\t<artifactId>jackson-databind</artifactId>\r\n\t\t\t<version>2.17.1</version>\r\n\t\t</dependency>\r\n\t\t<!-- Spring Boot Starter Validation -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- Hibernate Validator -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.hibernate.validator</groupId>\r\n\t\t\t<artifactId>hibernate-validator</artifactId>\r\n\t\t\t<version>8.0.0.Final</version>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- Jakarta Expression Language API -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>jakarta.el</groupId>\r\n\t\t\t<artifactId>jakarta.el-api</artifactId>\r\n\t\t\t<version>6.0.0</version>\r\n\t\t</dependency>\r\n\r\n\t\t<!-- Jakarta Expression Language Implementation -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.glassfish</groupId>\r\n\t\t\t<artifactId>jakarta.el</artifactId>\r\n\t\t\t<version>4.0.2</version>\r\n\t\t</dependency>\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-mail</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-api</artifactId>\r\n\t\t\t<version>0.11.2</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-impl</artifactId>\r\n\t\t\t<version>0.11.2</version>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt-jackson</artifactId>\r\n\t\t\t<version>0.11.2</version>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.validation</groupId>\r\n\t\t\t<artifactId>validation-api</artifactId>\r\n\t\t\t<version>2.0.1.Final</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.auth0</groupId>\r\n\t\t\t<artifactId>java-jwt</artifactId>\r\n\t\t\t<version>4.0.0</version>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<plugins>\r\n\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 49b61682a1cc7a5a8e6e0aed4aaeef30e9bbf019)
+++ b/pom.xml	(date 1717026492343)
@@ -149,7 +149,8 @@
 			<groupId>org.glassfish</groupId>
 			<artifactId>jakarta.el</artifactId>
 			<version>4.0.2</version>
-		</dependency>		<dependency>
+		</dependency>
+		<dependency>
 			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-security</artifactId>
 		</dependency>
@@ -188,9 +189,32 @@
 			<artifactId>java-jwt</artifactId>
 			<version>4.0.0</version>
 		</dependency>
+		<dependency>
+			<groupId>org.liquibase</groupId>
+			<artifactId>liquibase-core</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>io.github.cdimascio</groupId>
+			<artifactId>dotenv-java</artifactId>
+			<version>3.0.0</version>
+		</dependency>
+
 	</dependencies>
 	<build>
 		<plugins>
+			<!-- <plugin>
+				<groupId>org.liquibase</groupId>
+				<artifactId>liquibase-maven-plugin</artifactId>
+				<version>4.27.0</version>
+				<configuration>
+					<propertyFile>src/main/resources/application.yml</propertyFile>
+					<url>${env.}</url>
+					<username>${env.SPRING_DATASOURCE_USERNAME}</username>
+					<password>${env.SPRING_DATASOURCE_PASSWORD}</password>
+					<driver>${env.SPRING_DATASOURCE_DRIVER_CLASS_NAME}</driver>
+					<changeLogFile>classpath:db/changelog/changelog.yaml</changeLogFile>
+				</configuration>
+			</plugin> -->
 
 			<plugin>
 				<groupId>org.springframework.boot</groupId>
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  profiles:\r\n    active: ${SPRING_PROFILES_ACTIVE}\r\n  datasource:\r\n    url: ${SPRING_DATASOURCE_URL}\r\n    username: ${SPRING_DATASOURCE_USERNAME}\r\n    password: ${SPRING_DATASOURCE_PASSWORD}\r\n    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}\r\n    properties:\r\n      hibernate:\r\n        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}\r\n    show-sql: ${SPRING_JPA_SHOW_SQL}\r\n\r\naws:\r\n  accessKeyId: ${AWS_ACCESS_KEY_ID}\r\n  secretAccessKey: ${AWS_SECRET_ACCESS_KEY}\r\n  s3:\r\n    bucketName: ${AWS_S3_BUCKET_NAME}\r\n    region: ${AWS_REGION}\r\n\r\nspringdoc:\r\n  api-docs:\r\n    path: /api-docs\r\n  swagger-ui:\r\n    path: /swagger-ui\r\n  servers:\r\n    - url: https://api-digitalhouse.adksolutions.net.ar\r\n\r\nserver:\r\n  port: 8080\r\n\r\nlogging:\r\n  level:\r\n    root: ${SPRING_LOGGIN_LEVEL_ROOT}\r\n    org.springframework: ${SPRING_LOGGIN_LEVEL_FRAMEWORK}\r\n    proyecto.dh: ${SPRING_LOGGIN_LEVEL_PROJECT}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
--- a/src/main/resources/application.yml	(revision 49b61682a1cc7a5a8e6e0aed4aaeef30e9bbf019)
+++ b/src/main/resources/application.yml	(date 1717026492362)
@@ -5,7 +5,6 @@
     url: ${SPRING_DATASOURCE_URL}
     username: ${SPRING_DATASOURCE_USERNAME}
     password: ${SPRING_DATASOURCE_PASSWORD}
-    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
   jpa:
     hibernate:
       ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
@@ -13,6 +12,9 @@
       hibernate:
         dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
     show-sql: ${SPRING_JPA_SHOW_SQL}
+  liquibase:
+    change-log: classpath:db/changelog/changelog.yaml
+    enabled: true
 
 aws:
   accessKeyId: ${AWS_ACCESS_KEY_ID}
@@ -34,6 +36,6 @@
 
 logging:
   level:
-    root: ${SPRING_LOGGIN_LEVEL_ROOT}
-    org.springframework: ${SPRING_LOGGIN_LEVEL_FRAMEWORK}
-    proyecto.dh: ${SPRING_LOGGIN_LEVEL_PROJECT}
\ No newline at end of file
+    root: INFO
+    org.springframework: INFO
+    proyecto.dh: INFO
\ No newline at end of file
Index: .idea/diff-generator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/diff-generator.xml b/.idea/diff-generator.xml
new file mode 100644
--- /dev/null	(date 1717026492347)
+++ b/.idea/diff-generator.xml	(date 1717026492347)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DiffGenerationConfig">
+    <option name="snapshotDb" value="false" />
+    <option name="snapshotModelValue" value="Default" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/proyecto/dh/DigitalHouseApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto.dh;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class DigitalHouseApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(DigitalHouseApplication.class, args);\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/proyecto/dh/DigitalHouseApplication.java b/src/main/java/proyecto/dh/DigitalHouseApplication.java
--- a/src/main/java/proyecto/dh/DigitalHouseApplication.java	(revision 49b61682a1cc7a5a8e6e0aed4aaeef30e9bbf019)
+++ b/src/main/java/proyecto/dh/DigitalHouseApplication.java	(date 1717026492368)
@@ -1,13 +1,33 @@
 package proyecto.dh;
 
+import io.github.cdimascio.dotenv.Dotenv;
+import io.github.cdimascio.dotenv.DotenvEntry;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.builder.SpringApplicationBuilder;
+import org.springframework.core.env.MapPropertySource;
+import org.springframework.core.env.MutablePropertySources;
+import org.springframework.core.env.StandardEnvironment;
+
+import java.util.Map;
+import java.util.stream.Collectors;
 
 @SpringBootApplication
 public class DigitalHouseApplication {
 
 	public static void main(String[] args) {
-		SpringApplication.run(DigitalHouseApplication.class, args);
+		Map<String, Object> env = Dotenv.load()
+				.entries()
+				.stream()
+				.collect(
+						Collectors.toMap(DotenvEntry::getKey, DotenvEntry::getValue));
+		new SpringApplicationBuilder(DigitalHouseApplication.class)
+				.environment(new StandardEnvironment() {
+					@Override
+					protected void customizePropertySources(MutablePropertySources propertySources) {
+						super.customizePropertySources(propertySources);
+						propertySources.addLast(new MapPropertySource("dotenvProperties", env));
+					}
+				}).run(args);
 	}
-
 }
Index: .idea/jpb-settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpb-settings.xml b/.idea/jpb-settings.xml
new file mode 100644
--- /dev/null	(date 1717026492359)
+++ b/.idea/jpb-settings.xml	(date 1717026492359)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DatabaseMigrationSettings" liquibaseFileType="YAML" />
+</project>
\ No newline at end of file
Index: .idea/jpa-buddy-datasource.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpa-buddy-datasource.xml b/.idea/jpa-buddy-datasource.xml
new file mode 100644
--- /dev/null	(date 1717026492364)
+++ b/.idea/jpa-buddy-datasource.xml	(date 1717026492364)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JpbDataSourceConfig">
+    <data-source-infos>
+      <data-source-info id="8873e180-9b10-443f-a3eb-6d24496c95fe__proyectointegrador_public" persistence-unit-name="Default" />
+    </data-source-infos>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/resources/db/changelog/changelog.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/db/changelog/changelog.yaml b/src/main/resources/db/changelog/changelog.yaml
new file mode 100644
--- /dev/null	(date 1717026492353)
+++ b/src/main/resources/db/changelog/changelog.yaml	(date 1717026492353)
@@ -0,0 +1,298 @@
+databaseChangeLog:
+  - changeSet:
+      id: 1717023271003-1
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  autoIncrement: true
+                  constraints:
+                    nullable: false
+                    primaryKey: true
+                    primaryKeyName: pk_attachments
+                  name: id
+                  type: BIGINT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: url
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: file_name
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: file_key
+                  type: VARCHAR(255)
+              - column:
+                  name: product_id
+                  type: BIGINT
+            tableName: attachments
+  - changeSet:
+      id: 1717023271003-2
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  autoIncrement: true
+                  constraints:
+                    nullable: false
+                    primaryKey: true
+                    primaryKeyName: pk_product_categories
+                  name: id
+                  type: BIGINT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: name
+                  type: VARCHAR(255)
+              - column:
+                  name: description
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: slug
+                  type: VARCHAR(255)
+              - column:
+                  name: attachments_id
+                  type: BIGINT
+            tableName: product_categories
+  - changeSet:
+      id: 1717023271003-3
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  autoIncrement: true
+                  constraints:
+                    nullable: false
+                    primaryKey: true
+                    primaryKeyName: pk_product_features
+                  name: id
+                  type: BIGINT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: name
+                  type: VARCHAR(255)
+              - column:
+                  name: description
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: icon
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: product_id
+                  type: BIGINT
+            tableName: product_features
+  - changeSet:
+      id: 1717023271003-4
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  autoIncrement: true
+                  constraints:
+                    nullable: false
+                    primaryKey: true
+                    primaryKeyName: pk_products
+                  name: id
+                  type: BIGINT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: name
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: description
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: stock
+                  type: INT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: price
+                  type: DOUBLE
+              - column:
+                  constraints:
+                    nullable: false
+                  name: rent_type
+                  type: SMALLINT
+              - column:
+                  name: category_id
+                  type: BIGINT
+            tableName: products
+  - changeSet:
+      id: 1717023271003-5
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  constraints:
+                    nullable: false
+                  name: user_id
+                  type: BIGINT
+              - column:
+                  name: roles
+                  type: VARCHAR(255)
+            tableName: user_roles
+  - changeSet:
+      id: 1717023271003-6
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - createTable:
+            columns:
+              - column:
+                  autoIncrement: true
+                  constraints:
+                    nullable: false
+                    primaryKey: true
+                    primaryKeyName: pk_users
+                  name: id
+                  type: BIGINT
+              - column:
+                  constraints:
+                    nullable: false
+                  name: first_name
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: last_name
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: email
+                  type: VARCHAR(255)
+              - column:
+                  constraints:
+                    nullable: false
+                  name: password
+                  type: VARCHAR(255)
+            tableName: users
+  - changeSet:
+      id: 1717023271003-7
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addUniqueConstraint:
+            columnNames: attachments_id
+            constraintName: uc_product_categories_attachments
+            tableName: product_categories
+  - changeSet:
+      id: 1717023271003-8
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addUniqueConstraint:
+            columnNames: name
+            constraintName: uc_product_categories_name
+            tableName: product_categories
+  - changeSet:
+      id: 1717023271003-9
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addUniqueConstraint:
+            columnNames: slug
+            constraintName: uc_product_categories_slug
+            tableName: product_categories
+  - changeSet:
+      id: 1717023271003-10
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addUniqueConstraint:
+            columnNames: name
+            constraintName: uc_products_name
+            tableName: products
+  - changeSet:
+      id: 1717023271003-11
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addUniqueConstraint:
+            columnNames: email
+            constraintName: uc_users_email
+            tableName: users
+  - changeSet:
+      id: 1717023271003-12
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addForeignKeyConstraint:
+            baseColumnNames: product_id
+            baseTableName: attachments
+            constraintName: FK_ATTACHMENTS_ON_PRODUCT
+            referencedColumnNames: id
+            referencedTableName: products
+  - changeSet:
+      id: 1717023271003-13
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addForeignKeyConstraint:
+            baseColumnNames: category_id
+            baseTableName: products
+            constraintName: FK_PRODUCTS_ON_CATEGORY
+            referencedColumnNames: id
+            referencedTableName: product_categories
+  - changeSet:
+      id: 1717023271003-14
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addForeignKeyConstraint:
+            baseColumnNames: attachments_id
+            baseTableName: product_categories
+            constraintName: FK_PRODUCT_CATEGORIES_ON_ATTACHMENTS
+            referencedColumnNames: id
+            referencedTableName: attachments
+  - changeSet:
+      id: 1717023271003-15
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addForeignKeyConstraint:
+            baseColumnNames: product_id
+            baseTableName: product_features
+            constraintName: FK_PRODUCT_FEATURES_ON_PRODUCT
+            referencedColumnNames: id
+            referencedTableName: products
+  - changeSet:
+      id: 1717023271003-16
+      author: santi
+      objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS
+      changes:
+        - addForeignKeyConstraint:
+            baseColumnNames: user_id
+            baseTableName: user_roles
+            constraintName: fk_user_roles_on_user
+            referencedColumnNames: id
+            referencedTableName: users
+
Index: .idea/jpa.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpa.xml b/.idea/jpa.xml
new file mode 100644
--- /dev/null	(date 1717026492356)
+++ b/.idea/jpa.xml	(date 1717026492356)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PersistenceUnitSettings">
+    <persistence-units>
+      <persistence-unit name="Default">
+        <packages>
+          <package value="proyecto.dh" />
+        </packages>
+      </persistence-unit>
+    </persistence-units>
+  </component>
+</project>
\ No newline at end of file
diff --git a/src/main/resources/liquibase.properties b/src/main/resources/liquibase.properties
new file mode 100644
